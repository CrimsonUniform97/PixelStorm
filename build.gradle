apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "maven"

repositories {
    mavenCentral()
	maven {
		name 'Sponge API'
		url 'http://repo.spongepowered.org/maven'
	}
}

sourceSets.main.java.srcDirs = ["src"]

dependencies {
    compile 'org.spongepowered:spongeapi:2.0'
	compile files('lib/forge-1.8-11.14.1.1398-universal.jar')
}

def buildProperties = new Properties()
buildProperties.load(new FileReader(file("build.properties")))

task projectData {
	ext.version = buildProperties.version_major + "." + buildProperties.version_minor + "." + buildProperties.version_revision + "_B" + buildProperties.build
	ext.mcversion = "1.8"
}

archivesBaseName = "PixelmonAuctions"
version = projectData.mcversion + "-" + projectData.version

processResources
{
	// replace stuff everywhere
    from(sourceSets.main.resources.srcDirs) {
        // replace version and mcversion
        expand 'version': projectData.version, 'mcversion': projectData.mcversion
    }
}

task update << {
	def properties = new Properties()
	properties.load(new FileReader(file("build.properties")))
	
	if (project.hasProperty("updateto")) {
		properties.build = (properties.build.toInteger() + 1).toString()
		
		if (updateto == "major") {
			properties.version_major = (properties.version_major.toInteger() + 1).toString()
			properties.version_minor = "0"
			properties.version_revision = "0"
		} else if (updateto == "minor") {
			properties.version_minor = (properties.version_minor.toInteger() + 1).toString()
			properties.version_revision = "0"
		} else if (updateto == "revision") {
			properties.version_revision = (properties.version_revision.toInteger() + 1).toString()
		} else {
			println "Version was not changed!"
			properties.build = (properties.build.toInteger() - 1).toString()
		}
		
		properties.store(file("build.properties").newWriter(), null)
	} else {
		println "Version was not changed!\nTo change the version, change the \"updateto\" property to \"major\", \"minor\" or \"revision\""
	}
}